package crypto // import "github.com/tappoy/crypto"

This package provides simple functions related to cryptography.

VARIABLES

var (
	// The password length is invalid. It must be 8 to 32 characters.
	ErrInvalidPasswordLength = errors.New("ErrInvalidPasswordLength")

	// The ciphertext is invalid.
	ErrInvalidCiphertext = errors.New("ErrInvalidCiphertext")

	// Cannot decrypt the secret.
	ErrCannotDecryptSecret = errors.New("ErrCannotDecryptSecret")

	// Error about initialization vector.
	ErrInitializationVector = errors.New("ErrInitializationVector")
)

FUNCTIONS

func DecryptoGunzip(r io.Reader, w io.Writer, password string) error
    Decrypt and gunzip the data from r to w with the given password.

    Errors:
      - ErrInvalidPasswordLength
      - ErrInitializationVector
      - any errors from io.Copy

func DecryptoGunzipUntar(src io.Reader, dst string, password string) error
    DecryptoGunzipUntar is a function to decrypt, gunzip, and untar the given
    data.

    Errors:
      - ErrInvalidPasswordLength
      - ErrInitializationVector
      - any errors from io.Copy, gzip.NewReader, tar.NewReader, os.MkdirAll,
        os.OpenFile, io.Copy

func GenerateRandomString(length int) string
    Generate a random string with the given length.

func GzEncrypto(r io.Reader, w io.Writer, password string) error
    Gzip and encrypt the data from r to w with the given password.

    Errors:
      - ErrInvalidPasswordLength
      - ErrInitializationVector
      - any errors from io.Copy, gzip.NewWriterLevel

func Hash(s string) string
    Hash is a function to hash the given string. (SHA-256)

        ex) "hello" -> "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824"

func Md5(s string) string
    Md5 is a function to hash the given string. (MD5)

func TarGzCrypto(src string, dst io.Writer, password string) error
    TarGzCrypto is a function to tar, gzip, and encrypt the given directory.

    Errors:
      - ErrInvalidPasswordLength
      - ErrInitializationVector
      - any errors from io.Copy, gzip.NewWriterLevel, filepath.Walk,
        tar.FileInfoHeader, tw.WriteHeader, os.Open


TYPES

type Crypto struct {
	// Has unexported fields.
}
    Crypto object.

func NewCrypto(password string) (*Crypto, error)
    Create a new Crypto object.

    Errors:
      - ErrInvalidPasswordLength

func (c *Crypto) Decrypt(data []byte) ([]byte, error)
    Decrypt the data.

    Errors:
      - ErrInvalidCiphertext
      - ErrCannotDecryptSecret

func (c *Crypto) Encrypt(data []byte) []byte
    Encrypt the data.

func (c *Crypto) Reader(r io.Reader) (io.Reader, error)
    Make cipher stream reader.

    Errors:
      - ErrInitializationVector

func (c *Crypto) Writer(w io.Writer) (io.Writer, error)
    Make cipher stream writer.

    Errors:
      - ErrInitializationVector

